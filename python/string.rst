========
String
========

* str型はイミュータブル(変更不能)オブジェクト

  * イミュータブルとは、オブジェクト自身の状態を変更できない性質のもの

* Python2.xまではスクリプトファイルはASCII文字種で記述されていることを想定していた
* Python3からは、UTF-8で記述されていることを想定している


改行を含んだ文字列を定義する(ヒアドキュメント)
================================================

::

  htmlbody = """<body>
  <h2>Page Title</h2>
  <p>
  Page body.
  </p>
  </body>
  """

複数の文字列をつなぐ
=====================

::

  nstr = "1234"
  result = nstr + "5678"


文字列を繰り返す
=================

::

  linestr = "-" * 20


文字列を数値に変換する
========================

::

  int(文字列)
  float(文字列)

  int("99")
  float("8.8")


数値を文字列に変換する
========================

::

  str(数値)

  str(45)


文字列の長さを調べる
======================

::

  len(文字列)

  len("hogehoge")


文字列を検索する
==================

::

  address = "東京都品川区東大井"
  "東" in address


文字列を置換する
==================

::

  address.replace("品川区", "文京区")


キーボードから入力された文字列を返す
======================================

::

  year = int(input("西暦:"))


文字列をそのままリテラルとして扱う
====================================

* エスケープシーケンスを無効にする

::

  raw = r"C:\path\to\file"


検索したい文字列を探す
========================

* find()は最初に見つかった位置を0から始まるインデックスとして返す
* 見つからなかった場合は「-1」を返す
* rfind()というメソッドを使うと、文字列の末尾から検索する

::

  S.find(検索したい文字列[, 開始インデックス[, 終了インデックス]])

  "This is a pen.".find("pen")


* index()はfind()と同じように動作する
* 見つからなかった場合は、「ValueError」という例外を発生する
* rindex()というメソッドを使うと、文字列を末尾から検索する


::

  S.index(検索したい文字列[, 開始インデックス[, 終了インデックス]])

  "This is a pen.".index("pen")


検索したい文字列で終わっている
================================

::

  S.endswith(検索したい文字列[, 開始インデックス[, 終了インデックス]])
  
  "This is a pen.".endswith("pen.")


検索したい文字列で始まっている
================================

::

  S.startswith(検索したい文字列[, 開始インデックス[, 終了インデックス]])

  "This is a pen.".startswith("This")


文字列を区切り文字列で区切る
=============================

::

  S.split([区切り文字列[, 分割数]])

  "Tokyo, Kagoshima, Fukuoka".split(",")


シーケンス中の要素を文字列を使って連結する
============================================

::

  S.join(シーケンス)

  "-".join(['Tokyo', 'Kagoshima', 'Fukuoka'])


文字列の先頭および末尾から文字列を削除する
============================================

* lstrip()というメソッドは文字列の先頭のみを削除する
* rstrip()というメソッドは文字列の末尾のみを削除する
* 引数が省略されるかNoneの場合、空白文字が削除される

::

  S.strip([削除する文字列])

  " hogehoge ".strip()


文字列の差し込み処理
======================

::

  "{0} lives Python !".format("Guido")
  "{0} {1} {0}".format('Spam', 'Ham')
  "{0:.2}".format(6260.0/12776)
  "{0:,}".format(999999)


文字列をバイト型に変換する
============================

::

  u = s.encode("euc-jp", "strict")
  # 変換できない文字があったらUnicodeErrorを送出する


バイト型を文字列に変換する
============================

::

  u = s.decode("shift-jis", "ignore")
  # 変換できない文字があっても無視する


スクリプトファイルのエンコード指定
====================================

::

  # coding: utf-8

