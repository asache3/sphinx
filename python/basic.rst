==============
Pythonの基本
==============

コマンドラインからの実行
==========================

* コマンドラインから実行した場合、__name__という特別な変数の値が'__main__'に設定される
* __name__の値から、コマンドラインから実行されているのか、他のモジュールからインポートされているのかを判断する

::

  if __name__ == "__main__":
    main()


標準入力から読み込む
======================

* imput()関数を利用すると、プロンプトを表示してユーザーの入力を取得できる
* ユーザーがエンターを押すまでに入力したデータをstrオブジェクトで返す

::

  name = input("お名前は？ ")
  age = input("何歳ですか？ ")
  print("こんにちは、%sさん (%s歳)" % (name, age))


コメント
==========

* ハッシュ記号「#」から始まり、改行されるまで
* 複数行をコメントアウトできるブロックコメントがない


ドックストリング
==================

* 関数やクラスの使い方の説明を記述する
* 記述したテキストはプロパティ(__doc__)に保存される
* インタラクティブシェルのhelp()関数でオンラインヘルプを見ることができる

::

  def docstring_text():
      """この関数はドックストリングのテスト。"""
      return True

  docstring_test.__doc__
  help(docstring_test)


定数
======

* Pythonに定数はない
* 定数的な意図を持って変数を定義する場合には、すべて変数名を定義することが多い


メモリ管理
=============

* Pythonのガベージコレクタはリファレンスカウンタを用いたガベージコレクタ

  * リファレンスカウンタ方式は、あるオブジェクトを参照しているリファレンスの数を保持して、リファレンス数がゼロになったオブジェクトが利用しているメモリを解放する

* gcモジュールを使うと、ガベージコレクションを手動でも実施できる

  * 自動で解放しきれないオブジェクトは、gc.garbageにリストで格納される

::

  import gc

  gc.collect()
  gc.garbase
