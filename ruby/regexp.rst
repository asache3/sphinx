========
Regexp
========

正規表現オブジェクトを作る
============================

::

  /ABC/
  re = Regexp.new("ABC")
  %r|ABC|


パターンとマッチング
======================

* 正規表現と文字列がマッチするかどうかを調べるメソッド

::

  正規表現 =~ 文字列

.. csv-table::
  :header-rows: 1

  パターン,マッチング
  ^,行頭
  $,行末
  [AB],AまたはB
  [A-Z],AからZまでのアルファベットの大文字全部
  [0-9],0から9までの数字全部
  [^ABC],ABC以外の文字
  .,任意の1文字
  \\s,空白文字
  \\d,0から9までの数字
  \\w,英数字
  \*,0回以上の繰り返し
  \+,1回以上の繰り返し
  ?,0回または1回の繰り返し


キャプチャ
============

::

  /(.)(.)(.)/ =~ "abc"
  first = $1
  second = $2
  third = $3

  /C./ =~ "ABCDEF"
  p $` #=> "AB"
  p $& #=> "CD"
  p $' #=> "EF"


文字列を置換する
=================

* subメソッドは最初にマッチした部分だけを置き換える
* gsubメソッドはマッチする部分すべてを置き換える

::

  str = "abc   def  g    hi"
  p str.sub(/\s+/, ' ') #=> "abc def  g    hi"
  p str.gsub(/\s+/, ' ') #=> "abc def g hi"


文字列を取り出す
==================

* scanメソッドはパターンにマッチした部分を取り出すだけで、置き換えることはしない

::

  "abracatabra".scan(/.a/) do |matched|
    p matched
  end
