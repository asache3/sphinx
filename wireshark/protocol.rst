==========
Protocol
==========

ARP(Address Reolution Protocol)
=================================

* TCP/IPネットワーク(IPv4)において、IPアドレスからMACアドレスを求めるために使われるプロトコル
* ARPリクエストとARPレスポンスの2種類のパケットしか使わない
* "arp -a"と入力すると、ARPテーブルを参照することができる
* MACアドレスが必要なのは、ネットワーク上の機器をつないでいるスイッチが、そのポートに接続しているすべての機器のMACアドレスを格納するCAM(Content Addressable Memory)テーブルを使っているため


パケット:ARPリクエスト
------------------------

* 宛先のIPアドレスはブロードキャストアドレス(ff:ff:ff:f:ff:ff)
* 宛先のMACアドレスは不明なので、00:00:00:00:00:00となっている


パケット:ARPレスポンス
------------------------

* 送信元MACアドレスとIPアドレスが、宛先のMACアドレスとIPアドレスになっている
* 送信先IPアドレスのMACアドレスが格納されている


gratuitous ARP
----------------

* IPアドレスが変わったことによる通信のトラブルを防ぐため、gratuitous ARPパケットが送信され、受け取った機器のキャッシュを新しいマッピング情報で強制的に更新する
* ヘッダはARPリクエストのヘッダと似ているが、送信元IPアドレスと宛先IPアドレスが同一である点が異なる


IP
====

* 生存時間(TTL)

  * TTLはパケットが作成されるときに定義され、通常パケットがルータに転送されつごとに、1ずつ減っていく
  * ルータ間を延々と行き来するパケットの数が増えて、DoS状態に陥るまでネットワークの使用可能帯域は消耗する

* IPフラグメンテーション(断片化)

  * データストリームを小さな断片(fragment)に分割することで、多種多様なネットワーク上でも確実に送信するためのIPの機能
  * パケットの断片化は、第2層のデータリンク層プロトコルのMTU(Maximum Transmission Unit)サイズと、これらの第2層プロトコルを使っている通信機器の設定によって発生する

    * イーサネットネットワーク上で送信できるパケットの最大サイズは1500バイト


IPヘッダ
----------

* MF(More Fragments)フラグがセットされていると、引き続きパケットの到着を待ち続ける
* Fragment offsetが0に設定されていると、断片化された最初のパケット
* Identificationフィールドが同一であると、同じパケットの一部


TCP
=====

* TCPで使えるポートは65535個

  * 1から1023までがスタンダードポートグループ(well-known port)
  * 1024から65535までがエフェメラルポートグループ

* 送信元ポートはOSがランダムに選択する


3ウェイハンドシェイク
-----------------------

1. 通信を行いたい機器(ホストA)は宛先(ホストB)にTCPパケットを送る。このパケットのTCPヘッダにはSYNフラグがセットされており、通信処理に使われる最初のシーケンス番号とMSS(Maximum Segment Size)が含まれている
2. ホストBはこのパケットに応答し、SYNフラグとACKフラグがセットされ、最初のシーケンス番号を含んだ同様のパケットを送り返す
3. 最後にホストAは、ACKフラグのみがセットされた最終パケットをホストBに送る


ティアダウン(切断)
--------------------

1. ホストAはホストBにFINフラグとACKフラグがセットされたTCPパケットを送り、コネクションの終了を知らせる
2. ホストBはACKパケットで応答後、自分のFIN/ACKパケットを送る
3. ホストAはACKパケットで応答し、通信が終了する


TCPリセット
-------------

* RSTフラグはコネクションの突然終了や、コネクションの試行の拒否を示すためのもの


UDP(User Datagram Protocol)
=============================

* TCPがエラー検出機能により信頼性の高いデータ転送を目的に設計されているのに対し、UDPは高速な転送を目的としている
* コネクションレスプロトコル
* 信頼性を保証するための独自のサービスを内蔵していたり、信頼性の高い接続を実現するためにICMP機能を使ったりしている


ICMP(Internet Control Message Protocol)
=========================================

* TCP/IPが動作するための補助的な役割を果たすプロトコル
* TCP/IPネットワーク上の通信機器、サービス、経路などが使用可能かどうかに関する情報を提供する
* ping、traceroute


DHCP(Dynamic Host Configuration Protocol)
===========================================

* 機器に手作業でアドレスを割り当てる必要がある問題を解決するために開発されたのが、ネットワークに接続した機器に自動的にアドレスを割り当てるBOOTP(Bootstrap Protocol)
* のちにBOOTPは、より洗練されたDHCPによって置き換えられた
* トランスポート層プロトコルとしてUDPを使っている

  * クライアントが要求した情報を受信するまでの速度を非常に重視している
  * 信頼性を維持する機構を持っている


DHCP更新処理
--------------

* DISCOVER、OFFER、REQUEST、ACKNOWLEDGEENT(ACK)の4種類のパケットを使う(DORA処理)


DHCP DISCOVERパケット
-----------------------

* 最初のパケットは0.0.0.0の68番ポートから255.255.255.255の67番ポートへと送られる


DHCP OFFERパケット
--------------------

* Your (client) IP addressフィールドでIPアドレスがクライアントに提供される


DHCP REQUESTパケット
---------------------- 

* まだIPアドレスの取得プロセスが完了していないので、IPアドレス0.0.0.0から送る
* 新たな要求/応答トランザクションとなるため、新しいトランザクションIDが付与される


DHCP ACKパケット
------------------

* 要求されたIPアドレスをクライアントにDHCP ACKパケットで送り、この情報をデータベースに記録する


DHCPのリース更新
------------------

* IPアドレスをリース中のクライアントが再起動したときの、IPアドレスを再度要求するプロセス
* リース更新ではREQUESTとACKパケットのステップ以外必要ない


DNS
=====

* www.google.comなどのような名前(DNS名)を74.125.159.99のようなIPアドレスに変換する
* DNSはUDPを使うが、ゾーン転送など一部のタスクについてはTCPを使う
* DNSサーバがIPアドレスを検索する場合、リクエストを行ったクライアントの代理として別のサーバにクエリを行う(「再帰」)


DNSゾーン転送
---------------

* DNSゾーンとは、DNSサーバが管理を任された名前空間(DNS名のグループ)
* 完全ゾーン転送(AXFR)

  * 機器間でゾーン全体を転送する

* 増分ゾーン転送(IXFR)

  * ゾーン情報の一部のみを転送する


DNSクエリの生成が行われない理由
---------------------------------

* コネクションを確立しようとした機器のDNS名とIPアドレスが、すでにDNSキャッシュに格納されている
* DNS名に対するコネクションを確立しようとした機器が、DNS名とIPアドレスの対応付けを、hostsファイルに保持している


