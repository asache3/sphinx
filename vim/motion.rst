========
Motion
========

論理行と表示行
================

* Vimは論理行(real line)と表示行(display line)を区別している
* 論理行と表示行の違いを知る一番の方法は、「number」設定を有効にすること

::

  :set number


.. csv-table::
  :header-rows: 1

  カーソル移動,コマンド
  論理行で1行下に移動,j
  表示行で1行下に移動,gj
  論理行で1行上に移動,k
  表示行で1行上に移動,gk
  論理行の先頭の文字に移動,0
  表示行の先頭の文字に移動,g0
  論理行の末尾に移動,$
  表示行の末尾に移動,g$ 


単語単位での移動
==================

.. csv-table::
  :header-rows: 1

  カーソル移動,コマンド
  次の単語の先頭に前進,w/W
  現在の単語もしくは前の単語の先頭に後退,b/B
  現在の単語もしくは次の単語の末尾に前進,e/B
  前の単語の末尾に後退,ge/gE


* wordは英数字、数字、アンダースコアが連続したもの、もしくはその他の非空白文字が連続したもの

  * ピリオド(.)とアポストロフィ(,)はwordとしてカウントされる

* WOREは非空白文字が連続したもので、ホワイトスペースで区切られる
* 「WORDはwordよりも大きい」


文字を検索
============

.. list-table::
  :header-rows: 1

  * - カーソル移動
    - コマンド
  * - 次にある{char}までカーソルを末尾方向に移動
    - f{char}
  * - 前にある{char}までカーソルを先頭方向に移動
    - F{char}
  * - 次にある{char}の直前の文字までカーソルを末尾方向に移動
    - t{char}
  * - 前にある{char}の直前の文字までカーソルを先頭方向に移動
    - T{char}
  * - 直前の検索を繰り返す
    - ;
  * - 直前の検索を反対方向に繰り返す
    - ,

* 現在行でカーソルをサクサクと移動させたいときは、f{char}とF{char}をノーマルモードで使う
* t{char}コマンドとT{char}コマンドは、d{motion}もしくはc{motion}と組み合わせて使うことが多い


検索モーションを使って削除
----------------------------

::

  d/{string}<Enter>

* 指定した文字列は削除対象にはならない


テキストオブジェクト
======================

* iが前置されたテキストオブジェクトは、デリミタの内側を選択する(inside)
* aが前置されたテキストオブジェクトはデリミタを含むすべてを選択する(around, all)

::

  vi} # ビジュアルモードに切り替えて{}に含まれている
  cit # Change inside the tag(タグの内側を変更)

* iwテキストオブジェクトは現在のwordの最初から最後までの文字を扱う
* awテキストオブジェクトの範囲はwordの後方もしくは前方にある空白文字まで広がる

::

  daw # 単語(word)と空白が削除される
  ciw # 空白を削除せずに単語だけを削除してから、挿入モードに切り替える

* d{motion}コマンドはaw、as、apと相性がよい
* c{motion}コマンドはiwなどと組み合わせるのがよい


場所をマークする
==================

* m{a-zA-Z}コマンドは、現在のカーソル位置に、指定された文字でマークする
* '{mark}はマークが設定された行に移動して、最初に非空白文字にカーソルを置く
* \`{mark}コマンドは、マークされた場所に移動する

::

  mm
  `m


対応するカッコに移動
======================

* %コマンドを使うと、開きカッコとそれに対応する閉じカッコの間でジャンプを行える
* %コマンドを使うと、Vimはジャンプする直前の位置を自動的にマークしてくれる

  * \`\`を押すことでマークを使って元の位置に戻れる



matchitプラグイン
-------------------

* %コマンドで対となるキーワードの組の間を移動できる

::

  set nocompatible
  filetype plugin on
  runtime macros/matchit.vim


