===================
Command Line Mode
===================

* :キーを押すと、Vimはコマンドラインモードに切り替わる
* コマンド名を入力し、<Enter>を押して実行する
* コマンドラインモードからノーマルモードへは<Esc>を押して切り替える


指定された行に移動する
========================

::

  :(line number)
  :$


行の範囲を指定する
====================

::

  :{start},{end}
  :2,5p # 2行目から5行目を表示する
  :.,$p # 現在の行からファイルの末尾までを表示する
  :%s/Practical/Pragmatic/ # %は現在のファイルのすべての行を表す


* 「'<」という記号はビジュアルな選択範囲の先頭を表すマークであり、「'>」はビジュアルな選択範囲の最後の行を表すマーク

::

  :'<,'>p

パターンで行範囲を指定
------------------------

::

  :/<html>/,/<\html>/p

* オフセットは「:{address}+n」の形式

::

  :/<html>/+1,/<\html>/-1p


行をコピー/移動
=================

* 行のコピーは:t、移動は:m

.. csv-table::
  :header-rows: 1

  結果,コマンド
  6行目を現在の行の下にコピー,:6t.
  現在の行を6行目の下にコピー,:t6
  現在の行をコピー,:t.
  現在の行をファイル末尾にコピー,:t$


直前のExコマンドを繰り返す
============================

::

  @:


選択範囲に対してノーマルモードのコマンドを実行する
====================================================

::

  '<,'>normal . # 選択した行範囲にドットコマンドを実行する
  :%normal A; # ファイルのすべての行末にセミコロンを追加する


タブ補完
==========

* <Ctrl-d>コマンドで、補完可能な候補を一覧で表示する
* <Tab>キーを押すと候補を表示する、<S-Tab>を押せば逆順に候補を表示する


コマンドラインウィンドウを開く
================================

::

 q:


* コマンドラインウィンドウで<Enter>を押すと、アクティブなウィンドウに対してコマンドが実行される
* コマンドラインモードでは、<Ctrl-f>でコマンドラインウィンドウに切り替えられる


シェルでプログラムを実行
==========================

* !をコマンドの前に置くことで、シェルで外部プログラムを実行できる

::

 :!ls
 :!ruby %
 :shell # インタラクティブなシェルセッションを始める


シェルを実行し、標準出力をカーソル行の下に挿入する
----------------------------------------------------

::

  :read !{cmd}


指定された行を標準入力として、シェルを実行する
------------------------------------------------

::

  :[range]write !{cmd}
