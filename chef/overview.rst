==========
Overview
==========

Chefとは
==========

* サーバー設定や更新を自動化するツール
* サーバー環境のメタデータを管理し、ノードの役割・状態を収束させるオペレーションフレームワーク
* Rubyで手順書のコードを書く
* 人手を介さずには成り立たなかったサーバーやインフラ周りをまるでアプリケーションのコードを書くかのように、コードによって支配することができる

  * Infrastructure as Code


Chef ServerとChef Solo
========================

* Chef Server + Chef Client

  * クライアント/サーバーモデルにより大規模環境を管理する
  * 2種類のChef Server

    * Opscode社がSaaSとして提供しているHosted Chef
    * OSSによる配布版

  * Chef Soloでレポジトリに保存していた情報などをサーバーサイドのデータベースとして管理する
  * 各ノードはインストールされたChef Clientを通じてChef Serverからデータを取得し、必要ならレシピを実行して自分自身の状態を変更する
  * JSON over HTTPSでChef Client→Chef ServerへのPULL型のアーキテクチャ
  * Chef ServerではChef ClientからのHTTPリクエストを待ち受けるためにnginxとErlangで書かれたerchefというサービスが起動している
  * Chef Soloにはない機能

    * Ohaiが収集する様々なノードの情報を軸に、Chef Serverに登録された全ノードを検索することができる
    * ノード群に配布する各種ファイルをサーバーに蓄積しておくことができる
    * ブラウザからノードを管理するUIが提供される

* Chef Solo

  * サーバーを必要とせず、単独のコマンドとしてChefを実行する
  * Chef Server + Chef Clientのサブセット
  * 管理対象のサーバーでchef-soloコマンドを叩いてローカルに保存されたレシピを実行する
  * knife-soloを使うとリモートへのレシピ転送とssh経由でのコマンドを実行を行う
  * 裏側ではレシピがノードのローカルにあってそれをchef-soloが実行している


レポジトリ(キッチン)、クックブック、レシピ
============================================

* レシピ

  * 「コード化された手順書」あるいは「サーバーの状態」

* クックブック

  * 特定のレシピに必要なデータやファイルをまとめる入れ物
  * ファイルに対するディレクトリや、クラスに対する名前空間にようなもの

* レポジトリ(キッチン)

  * クックブック群を含む、Chefの実行に必要なファイルをまとめる入れ物


冪等性(べき等性)
==================

* その操作を複数回行っても結果が同じであること

  * 数学やアルゴリズムなどでよく使う言葉

* Chefを実行し終わった後のサーバーの状態は同一であることを保証する

